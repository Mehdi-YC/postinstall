# i3 config file (v4)
# Optimized with workspace management, gnome-terminal+tmux, and multi-monitor support
# Optimized with workspace management, gnome-terminal+tmux, and multi-monitor support

set $mod Mod4

# Font settings
# Font settings
font pango:monospace 8

# Autostart applications
# Autostart applications
exec --no-startup-id dex --autostart --environment i3
exec --no-startup-id feh --bg-scale /home/mehdi/Pictures/wallpapers/pxfuel.jpg
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
exec --no-startup-id setxkbmap fr
exec --no-startup-id setxkbmap fr
exec --no-startup-id nm-applet
# exec --no-startup-id picom --experimental-backends
exec --no-startup-id dunst

# Volume controls
# exec --no-startup-id picom --experimental-backends
exec --no-startup-id dunst

# Volume controls
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Window management
# Window management
floating_modifier $mod
bindsym $mod+q kill
bindsym $mod+q kill
bindsym $mod+f exec nautilus
bindsym Print exec --no-startup-id flameshot gui

# Application launcher
# bindsym $mod+p exec --no-startup-id ~/.config/rofi/rofi-app-menu.sh
bindsym $mod+p exec --no-startup-id dmenu_run
# Window focus
bindsym Print exec --no-startup-id flameshot gui

# Application launcher
# bindsym $mod+p exec --no-startup-id ~/.config/rofi/rofi-app-menu.sh
bindsym $mod+p exec --no-startup-id dmenu_run
# Window focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Layout management
# Layout management
bindsym $mod+h split h
bindsym $mod+v split v
bindsym $mod+m fullscreen toggle
bindsym $mod+s layout stacking
bindsym $mod+z layout tabbed
bindsym $mod+e layout toggle split
bindsym $mod+space floating toggle

# Workspace configuration
# Workspace configuration
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $ws10 "10"

# Assign workspaces to outputs
workspace $ws6 output eDP
workspace $ws1 output DisplayPort-1
workspace $ws2 output DisplayPort-1
workspace $ws3 output DisplayPort-1
workspace $ws4 output DisplayPort-1
workspace $ws5 output DisplayPort-1
workspace $ws7 output DisplayPort-1
workspace $ws8 output DisplayPort-1
workspace $ws9 output DisplayPort-1
workspace $ws10 output DisplayPort-1

# Workspace navigation
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# Move containers to workspaces
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# Enhanced workspace controls
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Control+Left  workspace next
bindsym $mod+Control+Right  workspace prev

# Terminal configuration
bindsym $mod+Return exec gnome-terminal -- tmux
bindsym $mod+Shift+Return exec gnome-terminal -- tmux new-session -A -s scratch
# assign [class="Gnome-terminal"] $ws1

# Browser configuration
bindsym $mod+b exec chromium-browser
# assign [class="Chromium"] $ws2

# System controls
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'Exit i3?' -B 'Yes' 'i3-msg exit'"
bindsym $mod+Shift+x exec "i3-nagbar -t warning -m 'Power off?' -B 'Yes' 'systemctl poweroff'"

# Resize mode
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'Exit i3?' -B 'Yes' 'i3-msg exit'"
bindsym $mod+Shift+x exec "i3-nagbar -t warning -m 'Power off?' -B 'Yes' 'systemctl poweroff'"

# Resize mode
mode "resize" {
    bindsym j resize shrink width 10 px or 10 ppt
    bindsym k resize grow height 10 px or 10 ppt
    bindsym l resize shrink height 10 px or 10 ppt
    bindsym m resize grow width 10 px or 10 ppt
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
    bindsym j resize shrink width 10 px or 10 ppt
    bindsym k resize grow height 10 px or 10 ppt
    bindsym l resize shrink height 10 px or 10 ppt
    bindsym m resize grow width 10 px or 10 ppt
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

# Status bar
bar {
    position top
    status_command i3status
# Status bar
bar {
    position top
    status_command i3status
}

# Gaps and smart layout
gaps inner 8
gaps outer 2
#smart_gaps on
# Gaps and smart layout
gaps inner 8
gaps outer 2
#smart_gaps on

# Clipboard helper
bindsym $mod+Shift+l exec "str=$(xclip -o -selection clipboard);echo ${str,,} | iconv -t ascii//TRANSLIT |tr ' ' '_' | xclip -selection clipboard"
# Clipboard helper
bindsym $mod+Shift+l exec "str=$(xclip -o -selection clipboard);echo ${str,,} | iconv -t ascii//TRANSLIT |tr ' ' '_' | xclip -selection clipboard"

# Auto-start tmux session if not running
# exec --no-startup-id [ -z "$TMUX" ] && gnome-terminal -- tmux new-session -A -s main
# Auto-start tmux session if not running
# exec --no-startup-id [ -z "$TMUX" ] && gnome-terminal -- tmux new-session -A -s main
