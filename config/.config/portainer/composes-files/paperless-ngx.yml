# Maintainer: Mickael "PAPAMICA" Asseline
# Update: 2022-06-28

#& type: 3
#& title: Paperless-ngx
#& description: Paperless-ngx is an application that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents.
#& note: Website: <a href='https://github.com/paperless-ngx/paperless-ngx' target='_blank' rel='noopener'>Github.com</a>
#& categories: SelfHosted, PAPAMICA
#& platform: linux
#& logo: https://img.papamica.com/logo/paperless.png

#% SERVICE: Name of the service (No spaces or points) [paperless]
#% DATA_LOCATION: Data localization (Example: /apps/service) [/_data/apps]
#% URL: Service URL (Example: service.papamica.fr or service.com)
#% NETWORK: Your Traefik network (Example: proxy) [proxy]
#% TZ: Timezone (Example: Europe/Paris) [Europe/Paris]

# Work with Portainer
version: "2.1"
services:
  broker:
    image: redis:6.0
    container_name: $SERVICE-redis
    restart: unless-stopped
    volumes:
      - $DATA_LOCATION/$SERVICE/redis:/data
    labels:
      - "autoupdate=monitor" # https://github.com/PAPAMICA/container-updater
    networks:
      - default
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

  paperless-ngx:
    image: linuxserver/paperless-ngx
    container_name: $SERVICE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - REDIS_URL=redis://$SERVICE-redis
      - PAPERLESS_URL=https://$URL
      - PAPERLESS_ALLOWED_HOSTS=$URL,localhost
      - PAPERLESS_CSRF_TRUSTED_ORIGINS=https://$URL
    volumes:
      - $DATA_LOCATION/$SERVICE/config:/config
      - $DATA_LOCATION/$SERVICE/data:/data
    restart: unless-stopped
    depends_on:
      - broker
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "autoupdate=monitor" # https://github.com/PAPAMICA/container-updater
      - "traefik.enable=true"
      - "traefik.http.routers.$SERVICE.entrypoints=https"
      - "traefik.http.routers.$SERVICE.rule=Host(`$URL`)"
      - "traefik.http.routers.$SERVICE.tls=true"
      - "traefik.http.routers.$SERVICE.tls.certresolver=http"
      - "traefik.http.services.$SERVICE.loadbalancer.server.port=8000"
      - "traefik.docker.network=$NETWORK"
    networks:
      - default

networks:
  default:
    external:
      name: $NETWORK