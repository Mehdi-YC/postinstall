- name: Configure Ubuntu/Debian/Fedora/RHEL machine
  hosts: localhost
  vars:
    config_path: "$HOME/repos/myconfig"

  tasks:
  
    - name: Enable COPRs (Fedora/RHEL)
      become: true
      command: 'dnf copr enable {{ item }} -y'
      with_items:
      # - zeno/scrcpy
        - atim/starship
        - atim/nushell
        - varlad/helix



    - name: Install minimal packages
      become: true
      package:
        name:
          - ranger
          - stow
          - fzf
          - tmux
          - htop
          - docker
          - docker-compose
          - python3-pip
          - neovim
          - git
          - bat
          - fontawesome5*
          - fira-code-fonts
          - helix
          #- cargo
        state: present
        update_cache: false
        install_weak_deps: false
      tags: 
        - minimal
        - cli



    - name: Install packages
      become: true
      package:
        name:
          - wget
          - curl
          - nodejs
          - npm
          - ansible
          - jq
          - unzip
          - zip
          - hyperfine
          - tokei
          - just
          - nushell
          - python3-pip
          - docker-compose
        state: present
        update_cache: false
        install_weak_deps: false
      tags: 
        - cli



    - name: Install Python packages with pip
      pip:
        name:
          - beautifulsoup4
          - numpy
          - pandas
          - matplotlib
          - requests
          - fastapi
          - scrapy
          - python-lsp-server
      tags:
        - cli



    - name: Install Rust via rustup
      become: yes
      shell: 'curl --proto "=https" --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y'

    - name: Install rust_analyzer
      command: rustup component add rust-src
      ignore_errors: yes
      tags:
        - cli



    - name: Clone config
      git:
        repo: https://github.com/mehdi-yc/postinstall
        dest: "{{ config_path }}"
        force: true
        update: true
      tags: 
        - minimal
        - cli



    - name: Backup .bashrc and .Xresources
      command: mv "{{ item }}" "{{ item }}.bak"
      args:
        creates: "{{ item }}.bak"
      with_items:
        - ~/.bashrc
        - ~/.Xresources
      ignore_errors: yes
      tags: 
        - minimal
        - cli




    - name: Stow the config files
      command: stow -vRd "{{ config_path }}/" -t $HOME config
      tags: 
          - minimal
          - cli



    - name: Ensure Fonts directory exists
      become: true
      file:
        path: /usr/share/fonts/truetype/
        recurse: true
        state: directory
      tags: 
        - cli



    - name: Download FiraCode Regular Nerd Font
      become: true
      get_url:
        url: https://github.com/ryanoasis/nerd-fonts/raw/v3.0.2/patched-fonts/FiraCode/Regular/FiraCodeNerdFont-Regular.ttf
        dest: /usr/share/fonts/truetype/FiraCode-Regular.ttf
      tags: 
        - cli




    - name: Install i3 and related packages
      become: true
      package:
        name:
          - i3
          - i3status
          - picom
          - dunst
          - feh
        state: present
      tags: minimal



    - name: add vscodium repo with rpmkeys
      become: true
      shell: |
            rpmkeys --import https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/-/raw/master/pub.gpg
            printf "[gitlab.com_paulcarroty_vscodium_repo]\nname=download.vscodium.com\nbaseurl=https://download.vscodium.com/rpms/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/-/raw/master/pub.gpg\nmetadata_expire=1h" | sudo tee -a /etc/yum.repos.d/vscodium.repo
      tags: desktop,fedora

    - name: Install Flatpak and Codium (VSCodium)
      become: true
      package:
        name:
          - flatpak
          - codium
        state: present



    - name: Install VSCodium extensions
      command: codium --install-extension "{{ item }}"
      with_items:
        #- asvetliakov.vscode-neovim
        - bradlc.vscode-tailwindcss
        #- innoverio.vscode-dbt-power-user
        - jdinhlife.gruvbox
        - ms-python.python
        #- ms-toolsai.jupyter
        #- ms-toolsai.jupyter-keymap
        #- ms-toolsai.jupyter-renderers
        #- ms-toolsai.vscode-jupyter-cell-tags
        #- ms-toolsai.vscode-jupyter-slideshow
        #- mtxr.sqltools
        #- mtxr.sqltools-driver-pg
        #- mtxr.sqltools-driver-sqlite
        - PKief.material-icon-theme
        - rust-lang.rust
        - rust-lang.rust-analyzer
        - s-nlf-fh.glassit
        - sainnhe.gruvbox-material
        - samuelcolvin.jinjahtml
        - svelte.svelte-vscode
        - tamasfe.even-better-toml
        #- ultram4rine.sqltools-clickhouse-driver
        #- vscodevim.vim
        - yandeu.five-server

#____________________________________________________________
#________________________ESPASO______________________________
    - name: Check if ~/opt directory exists
      ansible.builtin.stat:
        path: "~/opt"
      register: opt_dir

    - name: Create the ~/opt destination folder if it doesn't exist
      ansible.builtin.file:
        path: "~/opt"
        state: directory
      when: not opt_dir.stat.exists

    - name: Download the Espanso AppImage
      ansible.builtin.get_url:
        url: "https://github.com/federico-terzi/espanso/releases/download/v2.1.8/Espanso-X11.AppImage"
        dest: "~/opt/Espanso.AppImage"

    - name: Make Espanso AppImage executable
      ansible.builtin.command:
        cmd: "chmod u+x ~/opt/Espanso.AppImage"

    - name: Register espanso command alias
      ansible.builtin.command:
        cmd: "sudo ~/opt/Espanso.AppImage env-path register"

    - name: Register Espanso service
      ansible.builtin.command:
        cmd: "sudo ~/opt/Espanso.AppImage service register"

    # - name: Start Espanso with --unmanaged option
    #   ansible.builtin.command:
    #     cmd: "~/opt/Espanso.AppImage start --unmanaged"
#____________________________________________________________
#____________________________________________________________
    - name: Install Flatpak Apps
      become: true
      flatpak:
        name:
          - net.christianbeier.Gromit-MPX # drawing tool
          - rest.insomnia.Insomnia #API testing
          - org.pitivi.Pitivi #video editing
          - org.remmina.Remmina #server access
          - org.gimp.GIMP # Image manipulation program
          - org.inkscape.Inkscape #vector manipulation program
          - com.discordapp.Discord 
          - org.mozilla.firefox
          - com.valvesoftware.Steam
          - io.dbeaver.DBeaverCommunity #db managment
          #- net.cozic.joplin_desktop #notes taking app (may be replaced by git repo)
          - org.flameshot.Flameshot #screenshot tool
        method: system
        state: present